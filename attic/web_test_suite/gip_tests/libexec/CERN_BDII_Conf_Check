#!/usr/bin/env python

import re
import sys
import copy
import datetime

from test_common import *

CR = '\r'
LF = '\n'
CRLF = CR+LF

class CERN_BDII_Check:
    def __init__(self, base_path):
        self.cp = getConfig(base_path)
        self.bdii_conf_url = self.cp.get("CERN_BDII_Check", "bdii_conf_url")
        self.required_sites = self.setupRequiredSites()
        self.colorize = 1

    def get_sites(self):
        sites = self.cp.get("CERN_BDII_Check", "required_sites")
        sites = [i.strip() for i in sites.split(',')]
        return sites

    def setupRequiredSites(self):
        rq = {}
        initial_state = {"Exists" : False, "Valid_Endpoint" : False}
        sites_list = self.get_sites()

        for site in sites_list:
            rq[site] = copy.deepcopy(initial_state)

        return rq

    def main(self):
        self.checkConf()
        html = self.getHeader()
        sites_list = self.get_sites()
        for site in sites_list:
            exists = self.required_sites[site]["Exists"]
            valid = self.required_sites[site]["Valid_Endpoint"]
            html += self.getDetail(site, exists, valid)
        html += self.getFooter()
        return html

    def checkEndpoint(self, endpoint):
        rtn = False
        r = re.compile('ldap://(.*):([0-9]*)/(.*)')
        m = r.match(endpoint)
        if m: rtn = True

        return rtn

    def checkConf(self):
        conf = getURLData(self.bdii_conf_url, True)
        for line in conf:
            l = line.split()
            try:
                siteName = l[0]
                endpoint = l[1]
                rq = self.required_sites[siteName]
                rq["Exists"] = True
                valid = self.checkEndpoint(endpoint)
                rq["Valid_Endpoint"] = valid
            except:
                pass

    def getHeader(self):
        updateDateTime = datetime.datetime.now().strftime("%A %b %d %Y %H:%M:%S")

        html = """
            <h1>CERN BDII Conf check</h1>
            <h2>Last Updated on: %s </h2>
            <table rules='all' frame='border'>
            <tr>
                <th>Required Site</th>
                <th>Exists in conf file</th>
                <th>Valid LDAP Endpoint</th>
            </tr>
        """

        return html % updateDateTime

    def getDetail(self, site, exists, valid):
        html = ""
        self.colorize = self.colorize * -1
        if (self.colorize == -1):
            html = "      <tr style='background-color:#99ccff'>"
        else:
            html = "      <tr>"

        detail = """
                <td>%s</td>
                <td>%s</td>
                <td>%s</td>
            </tr>
            """
        html += detail % (site, exists, valid)
        return html

    def getFooter(self):
        html =  """
            </table>
        """
        return html

if __name__ == '__main__':
    c = CERN_BDII_Check(sys.argv[1])
    print c.main()

