#!/usr/bin/env python

import re
import sys
import copy
import datetime

from test_common import *

class MissingSites:
    def __init__(self, base_path):
        self.cp = getConfig(base_path)
        self.site_list = self.get_sites()
        self.colorize = 1
        self.port = self.cp.get("gip", "bdii_port")
        self.bdii = self.cp.get("gip", "bdii_addr")

    def get_sites(self):
        sites = self.cp.get("gip", "site_names")
        sites = [i.strip() for i in sites.split(',')]
        return sites

    def main(self):
        html = self.getHeader()
        for site in self.site_list:
            self.colorize = self.colorize * -1
            missing = self.getMissing(site)
            html += self.getDetail(site, missing)
        html += self.getFooter()

        return html

    def getMissing(self, site):
        ret = False
        ldap_data = self.runldapquery("mds-vo-name=" + site + ",mds-vo-name=local,o=grid")
        if len(ldap_data) < 20:  # arbitrary number
            ret = True
        else:
            ret = False

        return ret

    def runldapquery(self, filter):
        command = 'ldapsearch -xLLL -p ' + self.port + ' -h ' + self.bdii + ' -b ' + filter
        pout = runCommand(command)
        pout = self.unwraplines(pout)

        return pout

    def unwraplines(self, wrapped_list):
        r = re.compile('^ (.*)$')
        unwrapped_list = []
        for l in wrapped_list:
            m = r.match(l)
            if m:
                unwrapped_list[-1] += m.groups()[0]
            else:
                unwrapped_list.append(l.rstrip())
        return unwrapped_list


    def getHeader(self):
        updateDateTime = datetime.datetime.now().strftime("%A %b %d %Y %H:%M:%S")
        html = """
            <h1>Missing Sites Check</h1>
            <h2>This check queries the BDII for each site to determine if they are missing</h2>
            <h2>Last Updated on: %s </h2>
            <table rules='all' frame='border'>
            <tr>
                <th>Site Name</th>
                <th>Is Missing</th>
            </tr>
        """
        return html % updateDateTime

    def getDetail(self, site, missing):
        if missing:
            html = "      <tr style='background-color:#FF0000'>"
        else:
            if (self.colorize == -1):
                html = "      <tr style='background-color:#99ccff'>"
            else:
                html = "      <tr>"

        detail = """
                <td>%s</td>
                <td>%s</td>
            </tr>
            """

        return html + (detail % (site, str(missing)))

    def getFooter(self):
        html =  """
            </table>
        """
        return html

if __name__ == '__main__':
     m = MissingSites(sys.argv[1])
     print m.main()

