#!/usr/bin/perl -w

use strict;

my $path;
my @output;    # ldif output that is sent to std out.
my @dirs;      # The contents of the path  
my $ldif_file; # File name for the static ldif file
my @ldif_file; # Content of the static ldif file
my $file;      # A .list file
my @software;  # A list of installed software
my @exp_soft;  # The same list but with the attibute prefix
my $dn;        # A dn found in the static ldif file.


# Reads the configuration file
if ($ARGV[0] && $ARGV[1]) {
    $ldif_file = $ARGV[0];
    $path = $ARGV[1];
} else {
    print "Usage: $0 <config file> <path to \$vo.\$vo.list files>\n";
    exit 1
}

#Finds the installed software
@dirs=`ls $path`;
foreach(@dirs){
    chomp;
    $file = "$path/$_/$_.list";
     if ( -f $file ){
	 open (FILE, "$file") || die "Cannot open $file";
	while(<FILE>) {
	    @software = split " " ,$_;
	    for(@software){
		push @exp_soft, "GlueHostApplicationSoftwareRunTimeEnvironment: $_\n";
	    }
	}
	close FILE;
    }
}

#Gets the content of the static ldif file
open (LDIF, $ldif_file) || die "Cannot open '$ARGV[0]': $!,";
while (<LDIF>) {
    push @ldif_file, $_;
}
close (LDIF);  	

#Produces the output from the static ldif file and the install software.
for (@ldif_file){
    if(/dn:\s+GlueSubClusterUniqueID=/){
	push @output, "$_";
	$dn=$_;
    }elsif(/^$/ && $dn){
	for(@exp_soft){
	    push @output, $_;
	}
	push @output, "\n";
	undef $dn;
    }
    if (/GlueHostApplicationSoftwareRunTimeEnvironment:/ &&  $dn){
	push @output, $_;
    }
}

# Prints the output.
print @output;

exit 0;
