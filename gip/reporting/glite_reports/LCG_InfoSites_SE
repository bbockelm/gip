#!/usr/bin/env python

import re
import sys
import os

sys.path.insert(0, os.path.expandvars("$GIP_LOCATION/lib/python"))
import GipUnittest
from gip_common import getLogger, cp_get
from gip_testing import runTest, getTestConfig, runlcginfosites

class LcgInfoSitesSE(GipUnittest.GipTestCase):
    def __init__(self, cp):
        GipUnittest.GipTestCase.__init__(self, 'testLcgInfoSitesSE', 'testLcgInfoSitesSE', cp)
        self.bdii = cp_get(self.cp, "gip_tests", "bdii_addr", "")
        self.opts = ['se']

    def testLcgInfoSitesSE(self):
        """
LCG InfoSites SE Query

lcg-infosites --is is.grid.iu.edu --vo ops se

Checks SE's, Type, Available Space (Kb), and Used Space (Kb) for the
following vo's:  MIS, OPS, CMS, and ATLAS.  NOTE: This test is not really
intended for a site adminitstrators other than to see if their site's SE
is configured properly and is visible to VO's using the lcg tools.
        """
        vo_sep = ""
        for i in range(0, 70): vo_sep += "="
        vos = ['mis', 'ops', 'cms', 'atlas']
        for vo in vos:
            output = "VO: %s\n" % vo
            output += vo_sep
            output += self.getInfoForVO(vo)
            self.expectTrue(False, output)

    def getInfoForVO(self, vo):
        pout = runlcginfosites(self.bdii, vo, self.opts).readlines()

        pout.pop(0) # Pop the header
        pout.pop(0) # Pop the separator line
        results = []
        for line in pout:
            items = line.split()
            record = {"avail" : items[0], "used" : items[1], "type" : items[2], "se" : items[3]}
            results.append(record)

        return self.format_results(results)

    def format_results(self, results):
        output = "\n"
        template = "%(se)-30s\t%(avail)-20s\t%(used)-20s\t%(type)-6s\n"
        header = {"se":"SE", \
                  "avail":"Available Space (Kb)", \
                  "used":"Used Space (Kb)", \
                  "type":"Type"}
        output += template % header
        for each in results:
            output += template % each
        return output

def main(args):
    cp = getTestConfig(args)
    runTest(cp, LcgInfoSitesSE, per_site=False)

if __name__ == '__main__':
    main(sys.argv)
